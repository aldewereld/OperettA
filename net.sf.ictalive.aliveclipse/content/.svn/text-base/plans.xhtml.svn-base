<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Overview</title>
  <link rel="stylesheet" href="shared.css" type="text/css" />	
  </head>

<body>
<div class="menu">
	<div class="tooltipy" style="margin-top:10px;"><a href="http://org.eclipse.ui.intro/showPage?id=overview"><img src="images/yellow.png" height="24" width="24" border="0" /><span class="yellow" style="font-size:9px;">Overview</span></a></div>
    <div class="tooltip" style="margin-top:30px;"><a href="http://org.eclipse.ui.intro/showPage?id=tutorials"><img src="images/red.png" height="24" width="24" border="0" /><span style="font-size:9px;">Tutorials</span></a></div>
    <div class="tooltip" style="margin-left:-10px;"><a href="http://org.eclipse.ui.intro/showPage?id=methodology"><img src="images/green.png" width="24" height="24" border="0" /><span style="font-size:9px;">Methodology</span></a></div>
    <div class="tooltip" style="margin-left:50px;"><a href="http://org.eclipse.ui.intro/showPage?id=agents"><img src="images/left.png" width="24" height="24" border="0" /><span style="font-size:9px;">Previous</span></a></div>
    <div class="tooltipup"><a href="http://org.eclipse.ui.intro/showPage?id=coordination"><img src="images/up.png" width="24" height="24" border="0" /><span style="font-size:9px;">Up</span></a></div>
    <div class="tooltip"><a href="http://org.eclipse.ui.intro/showPage?id=workflowannotation"><img src="images/right.png" width="24" height="24" border="0" /><span style="font-size:9px;">Next</span></a></div>
    <div class="tooltip" style="margin-left:50px;"><a href="http://org.eclipse.ui.intro/close"><img src="images/workspace.png" width="24" height="24" border="0" /><span style="font-size:9px;">Go to workbench</span></a></div>
</div>

<div class="bg">
<img id="background-img" src="images/alive_background.jpg" class="bg" />
</div>

<div class="page-style">
    <div id="content"> 	
        <h2>Plan Synthesis</h2>
        <p>The plan synthesis process attempts to produce a (series of) plan(s) for a given task using a particular set of actions (from a particular action model). Currently, generated plans consist of a series of atomic actions that, when performed, achieve the specified task. Plans are contained in a Plans Collection, which, like the action and task collections, has a ns (namespace) property defining the namespace of the plans in the collection, and a plans property which contains a list of plans. A plan has three properties that are of interest:</p>
        <ul>
          <li>name, which defines the name of the plan. The name is combined with the ns value of the containing plan collection to provide the URI of the plan; URIs are treated as unique identifiers, and so two plans with the same URI will be considered to be the same plan.</li>
          <li>forTask, which references the task the plan achieves.</li>
          <li>hasAtomicProcessGroundingList, which is a reference to the first step in the plan. The type of this property is the Action Grounding List class, which provides a recursive list of Action Groundings (the two properties of the Action Grounding List are first, which refers to an Action Grounding, and rest which refers to another Action Grouding List). </li>
        </ul>
    <p>An Action Grounding represents a step in the plan; consisting of a reference to the action that should be performed at that step (via the owlsProcess property), and a list of Input Message Maps (via the input property) which provide a textual description of the value for a parameter via the messagePart and parameter properties. If the type of an input is a class in the domain ontology, the value of messagePart is the URI of the individual that will be used as the input value, otherwise the messagePart is the actual value.</p>
    <h3>Step Through</h3>
    <p>The plan synthesis process can be invoked by clicking on the &quot;combine&quot; button between the &quot;Task Model&quot;, &quot;Action Model&quot;, and &quot;Plan Model&quot; boxes on the ALIVE dashboard.  On clicking on the button, a wizard is displayed which takes the user through the process of providing some of the details necessary to perform the plan synthesis using the selected task and action models. </p>
    <p> The first page in the wizard allows the selection of a plans file to store any generated plans in.  Firstly, the folder in which the file should be saved should be selected from the list, and the filename entered in the &quot;File name:&quot; text field.  The filename entered must end with &quot;.plans&quot;.  If a file already exists in that folder with the specified name, the wizard will request another name is entered.</p>
    <p> The second, and final, page of the wizard requires some details to be entered about the plans that will be generated:</p>
    <ul>
      <li>The namespace of the plans collection containing the generated plans, this value will be used as the value of the ns property of the plans collection to which any generated plans will be added.  A value such as &quot;http://www.example.com/example.owl#&quot; is typically used.</li>
      <li>Prefix for generated plan names, specifies the value of the name field for any generated plans.  The name will consist of the text entered in this field, with &quot;_X&quot; appended, where X is an integer starting from zero and incrementing by one. </li>
      <li>Maximum number of plans to generate, allows the restriction of the maximum number of plans the planner will be asked to produce.  This can be useful in situations where the actions contain numerous Any Order control constructs which could result in high (100+) numbers of plans being generated.  If -1 is selected, no limit will be placed and all plans will be generated.  </li>
      <li>Address of the plan service server; the plan synthesis process is made available as a web service, and this field allows the address of the server running that service to be entered.  By default the wizard assumes the service is running on a Web server on the local host, and so has the address &quot;http://localhost:8080&quot;.</li>
    </ul>
    <p>Once these fields have been completed, clicking the &quot;Finish&quot; button will invoke the plan synthesis web service.  The actions file selected in the dashboard will be passed, along with the first task in the selected tasks file to the web service, with any generated plans stored in the selected plans file.  </p>
<h3>Best Practices (do)</h3>
    <p>If the plan synthesis web service is not running on the local host, ensure that a connection to the internet is available. </p>
    <p> Ensure that a unique URI is used for the generated plans, either by not using the same namespace for different plan collections, or using a different plan name prefix.  </p>
    <p>See also the Best Practices (do) for the actions and tasks (particularly regarding the input message maps of the task grounding variables to values).</p>
    <h3>Bad Practices (don't)</h3>
    <p>Attempting to invoke the plan synthesis without having either an active internet connection or the plan synthesis web service running locally.</p>
    <h3>Inter-dependencies</h3>
    <p>The main inter-dependency of the generated plans are with the action model(s) containing the actions in the plans (referenced by the owlsProcess property of the Action Grounding class) and with the task model containg the task the plan achieves (via the forTask property of the Plan class).</p>
    <p> The main inter-dependency of the plan synthesis wizard is to have access to the plan synthesis web service.  This is achieved either by having the plan synthesis web service running on a web service locally, or entering the address of the server running the service at the relevant field in the wizard and ensuring an active internet connection is available.</p>
    <h3>Set Up - Initialisation</h3>
    <p>To run the plan synthesis web service locally, download the plan synthesis web service war (net.sf.ictalive.coordination.plansynthesis.webservice.war) file from ALIVE sourceforge svn (located in the CoordinationLevel/tags/Distributions folder), and deploy the war file on a JEE server; see the instructions for your server on how to do this.  </p>
    <p>For deploying on tomcat (a popular JEE server, available from http://www.apache.org), go to the tomcat manager (typically located at <a href="http://localhost:8080/manager/html/">http://localhost:8080/manager/html/</a>), log in as an administrator, and use the &quot;WAR file to deploy&quot; form to select the net.sf.ictalive.coordination.plansynthesis.webservice.war file and deploy the service).</p>
<h3>Errors</h3>
    <p>If the actions and task have been defined correctly, any errors that occur when using the plan synthesis wizard are related to the tool being unable to connect to the server.  If any errors do occur, a dialog box should appear with an error message; further details can be found on the &quot;Errors&quot; view on Eclipse on in the Eclipse log files.</p>
    <p>If there are any errors with the actions or task, the errors are likely to have occurred when the planner was attempting to produce a plan.  One common source of errors is variable and inputs not being bound to a value in the task (see above).  When using the a remote service, these errors are not currently relayed to Eclipse, but an empty plans collection should be generated.  If the service is running locally, any errors should be added to the serverâ€™s log files (for example, if using tomcat these can be found at ${tomcathome}/logs/catalina.out file which can be opened in a text editor). </p>
  </div>
    <br />
    <div style="float:right; margin-right:10%;">Next: <a href="http://org.eclipse.ui.intro/showPage?id=workflowannotation">Workflow Annotation Tab</a></div>
</div>

<div id="logo">
	<img src="images/alive_logo.jpg" border="0" />
</div>
</body>
</html>
